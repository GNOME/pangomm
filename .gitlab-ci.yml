# 2024-06-11: ubuntu:latest = 24.04, ubuntu:rolling = 24.04, ubuntu:devel = 24.10
# See https://hub.docker.com/_/ubuntu
image: ubuntu:rolling

stages:
  - build
  - deploy

variables:
  MESON_GCC_DEPS: g++
                  gettext
                  git
                  yelp-tools
                  gtk-doc-tools
                  python3-pygments
                  python3-setuptools
                  libglib2.0-dev
                  libcairo2-dev
                  libpango1.0-dev
                  mm-common
                  libsigc++-3.0-dev
                  libglibmm-2.68-dev
                  libcairomm-1.16-dev
                  libxml-libxml-perl
                  meson
                  ninja-build
                  glib-networking

  PANGO_MESON_OPTIONS: -Dpango:build-testsuite=false
                       -Dpango:build-examples=false

  GIO_EXTRA_MODULES: "/usr/lib/x86_64-linux-gnu/gio/modules"
  GIT_SUBMODULE_STRATEGY: normal

.build_default:
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt update && apt -y upgrade && apt -y install $DEPENDENCIES

release_gcc_build:
  extends: .build_default
  stage: build
  variables:
    DEPENDENCIES: $MESON_GCC_DEPS
  script:
    - mkdir _build && cd _build
    # -Ddebug=false + -Doptimization=3 correspond to -Dbuildtype=release
    # Don't use warning_level and werror. They are applied also to subprojects.
    # meson setup --prefix=/usr --libdir=lib -Ddebug=false -Doptimization=3 -Dwarnings=fatal -Dwarning_level=3 -Dwerror=true
    - meson setup --prefix=/usr --libdir=lib -Ddebug=false -Doptimization=3 -Dwarnings=fatal $PANGO_MESON_OPTIONS
    - meson compile
    # Must wrap the command in single quotes because of the colon.
    # See https://gitlab.gnome.org/help/ci/yaml/script.md#use-special-characters-with-script
    # Don't test subprojects.
    - 'meson test --suite pangomm:'
    - meson install --quiet
  artifacts:
    when: always
    paths:
      - _build/docs/reference

release_clang_build:
  extends: .build_default
  stage: build
  variables:
    DEPENDENCIES: $MESON_GCC_DEPS clang
  script:
    - mkdir _build && cd _build
    # -Ddebug=false + -Doptimization=3 correspond to -Dbuildtype=release
    # Don't use warning_level and werror. They are applied also to subprojects.
    # CC=clang CXX=clang++ meson setup --prefix=/usr --libdir=lib -Ddebug=false -Doptimization=3 -Dwarnings=fatal -Dwarning_level=3 -Dwerror=true
    - CC=clang CXX=clang++ meson setup --prefix=/usr --libdir=lib -Ddebug=false -Doptimization=3 -Dwarnings=fatal $PANGO_MESON_OPTIONS
    - meson compile
    # Don't test subprojects.
    - 'meson test --suite pangomm:'
    - meson install --quiet
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - _build/meson-logs/testlog.txt
      - _build/meson-logs/meson-log.txt
    expire_in: 1 week

# Publish reference documentation at gnome.pages.gitlab.gnome.org/pangomm
pages:
  stage: deploy
  needs: [release_gcc_build]
  script:
    - mkdir public
    - mv _build/docs/reference/html/* public
  artifacts:
    paths:
      - public
  only:
    refs:
      - master
