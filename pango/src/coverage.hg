/* coverage.h
 *
 * Copyright (C) 1998-1999 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

_CONFIGINCLUDE(pangommconfig.h)

#include <glibmm/value.h>
#include <pango/pango.h>

_DEFS(pangomm,pango)

namespace Pango
{

/** A Pango::Coverage represents a map from ISO-10646 character point to Pango::Coverage::Level.
 * It is often necessary in pango to determine if a particular font can represent a particular character,
 * and also how well it can represent that character. Pango::Coverage holds this information.
 */
class PANGOMM_API Coverage final
{
  _CLASS_OPAQUE_REFCOUNTED(Coverage, PangoCoverage, pango_coverage_new, pango_coverage_ref, pango_coverage_unref, PANGOMM_API)
  _IGNORE(pango_coverage_ref, pango_coverage_unref)
  _IGNORE(pango_coverage_copy) //pango ref doc: "This function may now be unecessary since we refcount the structure. Mail otaylor redhat.com if you use it."
  _IGNORE(pango_coverage_to_bytes, pango_coverage_from_bytes, pango_coverage_max)dnl// deprecated

public:
  _WRAP_ENUM(Level, PangoCoverageLevel, decl_prefix PANGOMM_API)

  //_WRAP_METHOD(Glib::RefPtr<Coverage> copy() const, pango_coverage_copy) //see above

  _WRAP_METHOD(Level get(int index) const, pango_coverage_get)
  _WRAP_METHOD(void set(int index, Level level), pango_coverage_set)
};

} // namespace Pango
