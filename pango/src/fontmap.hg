/* fontmap.h
 *
 * Copyright 2001      The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <giomm/listmodel.h>
#include <pangomm/font.h>
#include <pangomm/fontset.h>
#include <pangomm/fontfamily.h>
#include <pango/pango.h>

_DEFS(pangomm,pango)
_PINCLUDE(glibmm/private/object_p.h)

namespace Pango
{

class PANGOMM_API Context;

/** A %Pango::FontMap represents the set of fonts available for a particular rendering system.
 *
 * This is an abstract base class with implementations being specific to
 * particular rendering systems.
 *
 * @see Pango::CairoFontMap::get_default()
 */
class PANGOMM_API FontMap : public Glib::Object, public Gio::ListModel
{
  _CLASS_GOBJECT(FontMap, PangoFontMap, PANGO_FONT_MAP, Glib::Object, GObject, , , PANGOMM_API)
  _IMPLEMENTS_INTERFACE(Gio::ListModel)
  _CUSTOM_WRAP_NEW
  _IGNORE(pango_font_map_list_families)

public:
  _WRAP_METHOD(Glib::RefPtr<Font> load_font(const Glib::RefPtr<Context>& context, const FontDescription& desc) const, pango_font_map_load_font)
  _WRAP_METHOD(Glib::RefPtr<Fontset> load_fontset(const Glib::RefPtr<Context>& context, const FontDescription& desc, const Language& language) const, pango_font_map_load_fontset)

  _WRAP_METHOD(Glib::RefPtr<Context> create_context(), pango_font_map_create_context)

  /** List all families for the fontmap.
   * @return an array of pointers to Pango::FontFamily objects.
   */
  std::vector<Glib::RefPtr<FontFamily>> list_families() const;

  _WRAP_METHOD(guint get_serial() const, pango_font_map_get_serial)

  _IGNORE(pango_font_map_changed)dnl// Shall not be used by applications

  _WRAP_METHOD(Glib::RefPtr<FontFamily> get_family(const Glib::ustring& name),
    pango_font_map_get_family, refreturn, newin "2,50")
  _WRAP_METHOD(Glib::RefPtr<const FontFamily> get_family(const Glib::ustring& name) const,
    pango_font_map_get_family, refreturn, constversion, newin "2,50")
};

} /* namespace Pango */
